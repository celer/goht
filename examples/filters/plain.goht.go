// Code generated by GoHT - DO NOT EDIT.
// https://github.com/stackus/goht

package main

import "bytes"
import "context"
import "io"
import "github.com/stackus/goht"

// The `:plain` filter can be used to display a large amount of text
// without any parsing. Lines may begin with Haml syntax and it will
// be ignored.
// Variable interpolation is still performed.

func PlainExample() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(*bytes.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("## Header ##\n... important? ...\nThis is plain text.\nIt will be displayed exactly as it is written,\nnewlines and all.\n"); __err != nil {
			return
		}
		var __var1 string
		if __var1, __err = goht.CaptureErrors(goht.EscapeString("This will \"be\" interpolated")); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(goht.NukeWhitespace(__buf.Bytes()))
		}
		return
	})
}
