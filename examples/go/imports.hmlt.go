// Code generated by hamlet - DO NOT EDIT.

package example

import "bytes"
import "context"
import "io"
import "github.com/stackus/hamlet"
import (
	fmt "fmt"
	"strings"
)

// Just like in Go files you can specify imports that are needed
// by your Go code or Go code inlined into the Hamlet template.
// Any imports that you specify here will be combined with the
// imports used by the Hamlet compiler itself. Duplicate imports
// will be removed.

func ImportExample() hamlet.Template {
	return hamlet.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(*bytes.Buffer)
		if !__isBuf {
			__buf = hamlet.GetBuffer()
			defer hamlet.ReleaseBuffer(__buf)
		}
		var __children hamlet.Template
		ctx, __children = hamlet.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>"); __err != nil {
			return
		}
		var __var1 string
		if __var1, __err = hamlet.CaptureErrors(hamlet.EscapeString(fmt.Sprintf("Hello, %s!", strings.TrimSuffix("World!", "!")))); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(hamlet.NukeWhitespace(__buf.Bytes()))
		}
		return
	})
}
