// Code generated by hamlet - DO NOT EDIT.

package example

import (
	"bytes"
	"context"
	"github.com/stackus/hamlet"
	"io"
)

// You may include any Go code outside the Hamlet templates. It will
// be included in the generated file as-is.
// The included code, or any Go code can then be called from within the
// Hamlet templates using the various code calling syntax's.

func sayHello() string {
	return "Hello, world!"
}

func ExecuteCode() hamlet.Template {
	return hamlet.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(*bytes.Buffer)
		if !__isBuf {
			__buf = hamlet.GetBuffer()
			defer hamlet.ReleaseBuffer(__buf)
		}
		var __children hamlet.Template
		ctx, __children = hamlet.PopChildren(ctx)
		_ = __children
		foo := sayHello()
		if _, __err = __buf.WriteString("<p>"); __err != nil {
			return
		}
		var __var1 string
		if __var1, __err = hamlet.CaptureErrors(hamlet.EscapeString(foo)); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(hamlet.NukeWhitespace(__buf.Bytes()))
		}
		return
	})
}

func RenderCode() hamlet.Template {
	return hamlet.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(*bytes.Buffer)
		if !__isBuf {
			__buf = hamlet.GetBuffer()
			defer hamlet.ReleaseBuffer(__buf)
		}
		var __children hamlet.Template
		ctx, __children = hamlet.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<p>"); __err != nil {
			return
		}
		var __var2 string
		if __var2, __err = hamlet.CaptureErrors(hamlet.EscapeString(sayHello())); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var2); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("</p>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(hamlet.NukeWhitespace(__buf.Bytes()))
		}
		return
	})
}
