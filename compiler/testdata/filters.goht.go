// Code generated by GoHT - DO NOT EDIT.
// https://github.com/stackus/goht

package testdata

import "context"
import "io"
import "github.com/stackus/goht"

func FiltersTest() goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		str := "Interpolated <em>text</em>"
		if _, __err = __buf.WriteString("<p>\nPlain <em>text</em>\r\n"); __err != nil {
			return
		}
		var __var1 string
		if __var1, __err = goht.CaptureErrors(str); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var1); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\r\n</p>\n<p>\n\tIndented Plain <em>text</em>\r\n\t"); __err != nil {
			return
		}
		var __var2 string
		if __var2, __err = goht.CaptureErrors(str); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var2); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\r\n</p>\n<p>\nEscaped &lt;em&gt;text&lt;/em&gt;\r\n"); __err != nil {
			return
		}
		var __var3 string
		if __var3, __err = goht.CaptureErrors(goht.EscapeString(str)); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var3); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\r\n</p>\n<p>\nPreserved <em>text</em>\r&#x000A;"); __err != nil {
			return
		}
		var __var4 string
		if __var4, __err = goht.CaptureErrors(str); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var4); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\r&#x000A;\n</p>\n<div class=\"nesting\">\n<script>\nconsole.log(\""); __err != nil {
			return
		}
		var __var5 string
		if __var5, __err = goht.CaptureErrors(goht.EscapeString(str)); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var5); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\");\r\nif (true) {\r\n\tconsole.log(\""); __err != nil {
			return
		}
		var __var6 string
		if __var6, __err = goht.CaptureErrors(goht.EscapeString(str)); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var6); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("\");\r\n}\r\n</script></div>\n"); __err != nil {
			return
		}
		color := "red"
		if _, __err = __buf.WriteString("<style>\n.red {\r\n\tcolor: "); __err != nil {
			return
		}
		var __var7 string
		if __var7, __err = goht.CaptureErrors(goht.EscapeString(color)); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var7); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(";\r\n}\r\n.blue {\r\n\tcolor: blue;\r\n}\r\n</style>"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
